## -*- coding: utf-8 -*-
<%!
import time
%><%namespace name="pb_loader" module="pb_loader"/>
// Copyright ${time.strftime("%Y")} xresloader. All rights reserved.
// Generated by xres-code-generator, please don't edit it
//
#include <cstdlib>
#include <cstring>

#include "config_easy_api.h"

${pb_loader.CppNamespaceBegin(global_package)}
% for pb_msg in pb_set.generate_message:
%   for loader in pb_msg.loaders:
    // ======================================== ${loader.code.class_name} ========================================
%     for code_index in loader.code.indexes:
    EXCEL_CONFIG_API const ${pb_loader.CppFullPath(global_package)}${loader.get_cpp_class_full_name()}::${code_index.name}_container_type& get_${loader.code.class_name}_all_of_${code_index.name}() {
        static ${pb_loader.CppFullPath(global_package)}${loader.get_cpp_class_full_name()}::${code_index.name}_container_type empty;
        const config_manager::config_group_ptr_t& group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->${loader.get_cpp_public_var_name()}.get_all_of_${code_index.name}();
    }

%       if code_index.is_list():
    EXCEL_CONFIG_API const ${pb_loader.CppFullPath(global_package)}${loader.get_cpp_class_full_name()}::${code_index.name}_value_type* get_${loader.code.class_name}_by_${code_index.name}(${code_index.get_key_decl()}) {
        const config_manager::config_group_ptr_t& group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->${loader.get_cpp_public_var_name()}.get_list_by_${code_index.name}(${code_index.get_key_params()});
    }

    EXCEL_CONFIG_API ${pb_loader.CppFullPath(global_package)}${loader.get_cpp_class_full_name()}::item_ptr_type get_${loader.code.class_name}_by_${code_index.name}(${code_index.get_key_decl()}, size_t idx) {
        const config_manager::config_group_ptr_t& group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->${loader.get_cpp_public_var_name()}.get_by_${code_index.name}(${code_index.get_key_params()}, idx);
    }

%       else:
    EXCEL_CONFIG_API ${pb_loader.CppFullPath(global_package)}${loader.get_cpp_class_full_name()}::${code_index.name}_value_type get_${loader.code.class_name}_by_${code_index.name}(${code_index.get_key_decl()}) {
        const config_manager::config_group_ptr_t& group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->${loader.get_cpp_public_var_name()}.get_by_${code_index.name}(${code_index.get_key_params()});
    }
%       endif
%     endfor
%   endfor
% endfor
${pb_loader.CppNamespaceEnd(global_package)} // ${global_package}
